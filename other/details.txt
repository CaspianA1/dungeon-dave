features:
	- doors
	- a settings/menu option in the title screen and status bar
	- a level opener, with a cool spinning effect and a fade-up effect too
	- a billboard pool
	- an airship, maze, and metro/inner city level
	- accelerate sideways
	- a file format
	- a map editor
	- floors at different height levels
	- mipmapping for things
	- a shotgun more in the art style of Adam's whip
	- Attacked state for enemy
	- make each file an .o file, and then link them all together
	- long-range attacking enemies via guns + weapon projectiles (i.e shooting enemies)
	- slow enemies down by hitting them - or stop them in some way
	- make the minimap full-screen, meaning that it's rendered separately from the health percentage
	- hit head on things above player
	- heightmap instead of get_point_height fn
	- health pickups
	- clear walls and things
	- bump and bounce back against certain things or walls when running at them
	- bigger things
	- an app: https://gist.github.com/mathiasbynens/674099
problems:
	- slowing down -> a keypress, resets speed
	- small screen -> bigger screen or very small screen, edge triangles
	- z-buffering issues with things for higher point heights
	- don't intersect the player dot with walls in the minimap
	- disabling vsync makes everything choppy (not a big problem, just curious why)
	- bogo is completely light with -Ofast when he shouldn't be
	- enemies have jerky movement sometimes that can make them temporarily clip into a wall (reproduce it by jumping around, wait till the enemy moves at a slant, and then go to their position) (other way: fly into them)
	- fix enemy merging by making enemies account for thing collisions
	- some disappearing pixels for some textures far away

completed:
	- minimap that conveys height data
	- crosshair that stays aligned to the horizon
	- health percent indicator
	- enemy AI with idle, chasing, attacking, and dead states, with BFS pathfinding; enemies have different sounds and animations depending on their state as well that get quieter when farther away; can wake up enemies by getting too close, or making a sound through using a weapon, jumping, or landing from a large height
	- weapons use DDA to detect collisions; option to allow weapon to have close and far range as well
	- rudimentary level creation interface
	- shading with bloom circles, flat triangles, and perlin noise (cached via lightmaps), as well as environments that get darker when farther away
	- static and animated billboards (with only 1D Z-buffering for now)
	- texture mapping, with mipmapping that incorporates antialiasing (for cache coherency and reduced moir√© patterns)
	- audio system that allows for sound effects, background music, and volume tweaking based on an enemy's distance from the player
	- skyboxes that also change the portion shown based on the y-pitch
	- raycasting with multiple floor heights (no multi-dimensional floors though, yet)
	- use of vector intrinsics and an optimized StateMap data structure to ease performance on older devices
	- free look, with y-shearing and turning controlled by the mouse
	- accurate movement physics, both in terms of 2D acceleration + deceleration, and Y-axis jumping
	- increase in FOV while accelerating, screen tilt when strafing, and additional y-shearing when moving, giving a 'pacing' effect
	- remappable keybindings for movement
	- memory leak tracking system
	- planar + noclip mode
	- teleportation
	- enemy + teleporter surround sound