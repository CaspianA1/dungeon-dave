// The code for sprite wall_y_buffers:

float* wall_y_buffer; // (declared above handle_ray)

static byte first = 1; // after the #ifdef SHADING_ENABLED
if (first) {
	wall_y_buffer = calloc(settings.screen_width, sizeof(float));
	first = 0;
}

const double smallest_wall_y = (double) (wall_dest.y - (wall_dest.h * (point_height - 1)));
wall_y_buffer[d.screen_x] = smallest_wall_y;

// the code within the inner loop of render_overlay:

/*
if (screen_row < 0) continue;

if (screen.z_buffer[screen_row] < corrected_dist) { // if wall obscures sprite
	extern float* wall_y_buffer;
	const float dest_diff = screen_pos.y - wall_y_buffer[screen_row];
	if (dest_diff <= 0.0f) continue;
	const float dest_diff_ratio = dest_diff / screen_pos.h;
	const float src_diff = dest_diff_ratio * src_crop.h;
	if (billboard.pos[0] == 18.5 && billboard.pos[1] == 3.5) DEBUG((double) src_diff, lf);
}
*/

///// Another sprite experiment:

/* an experiment with not causing sprites to fly up
when the projection distance increases

static byte foo = 1;
static double val;

if (foo) {
	val = settings.proj_dist;
	foo = 0;
}
*/

///// Some old zdoom links:

/*
https://zdoom.org/wiki/Free_look
https://zdoom.org/wiki/Sky
https://zdoom.org/wiki/Sky_stretching
*/

/////